{"version":3,"sources":["components/NewExpense/ExpenseFilter.js","components/Card/Card.js","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","components/Expense/expenseDate.js","components/Expense/expenseItem.jsx","components/Expense/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/ExpenseUI/ExpensesChart.jsx","components/Title/Title.jsx","components/ExpenseUI/expenses.jsx","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","event","onChangeFilter","target","Card","classes","children","ExpenseForm","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","expenseDate","month","toLocaleString","toUpperCase","day","year","getFullYear","ExpenseItem","ExpensesList","item","length","map","Item","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Title","Dummy_expense","Expenses","filteredYear","setFilteredYear","setExpenses","FilterExpenses","filter","exp","prevExpense","selectedYear","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c0f45bd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\tconst dropdownChangeHandler = (event) => {\r\n\t\tprops.onChangeFilter(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"expenses-filter\">\r\n\t\t\t<div className=\"expenses-filter__control\">\r\n\t\t\t\t<label>Filter by year</label>\r\n\t\t\t\t<select value={props.selected} onChange={dropdownChangeHandler}>\r\n\t\t\t\t\t<option value=\"2022\">2022</option>\r\n\t\t\t\t\t<option value=\"2021\">2021</option>\r\n\t\t\t\t\t<option value=\"2020\">2020</option>\r\n\t\t\t\t\t<option value=\"2019\">2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n\tconst classes = \"Card \" + props.className;\r\n\treturn <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\nconst ExpenseForm = (props) => {\r\n\tconst [enteredTitle, setEnteredTitle] = useState(\"\");\r\n\tconst [enteredAmount, setEnteredAmount] = useState(\"\");\r\n\tconst [enteredDate, setEnteredDate] = useState(\"\");\r\n\tconst changeAmountHandler = (event) => {\r\n\t\tsetEnteredAmount(event.target.value);\r\n\t};\r\n\tconst changeTitleHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t};\r\n\tconst changeDatehandler = (event) => {\r\n\t\tsetEnteredDate(event.target.value);\r\n\t};\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: +enteredAmount,\r\n\t\t\tdate: new Date(enteredDate),\r\n\t\t};\r\n\t\tprops.onSaveExpenseData(expenseData);\r\n\t\tsetEnteredAmount(\"\");\r\n\t\tsetEnteredDate(\"\");\r\n\t\tsetEnteredTitle(\"\");\r\n\t};\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={enteredTitle}\r\n\t\t\t\t\t\tonChange={changeTitleHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tmin=\"0.01\"\r\n\t\t\t\t\t\tstep=\"0.01\"\r\n\t\t\t\t\t\tvalue={enteredAmount}\r\n\t\t\t\t\t\tonChange={changeAmountHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tmin=\"2019-01-01\"\r\n\t\t\t\t\t\tmax=\"2022-12-31\"\r\n\t\t\t\t\t\tvalue={enteredDate}\r\n\t\t\t\t\t\tonChange={changeDatehandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"new-expense__actions\">\r\n\t\t\t\t<button type=\"submit\">Add Expense</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nconst NewExpense = (props) => {\r\n\tconst saveExpenseDataHandler = (enteredExpenseData) => {\r\n\t\tconst expenseData = {\r\n\t\t\t...enteredExpenseData,\r\n\t\t\tid: Math.random().toString(),\r\n\t\t};\r\n\t\tprops.onAddExpense(expenseData);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"new-expense\">\r\n\t\t\t<ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default NewExpense;\r\n","import React from \"react\";\r\nimport \"./expenseDate.css\";\r\n\r\nfunction expenseDate(props) {\r\n\tlet month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n\tmonth.toUpperCase();\r\n\tconst day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\tconst year = props.date.getFullYear();\r\n\treturn (\r\n\t\t<div className=\"expense-date\">\r\n\t\t\t<div className=\"expense-date__day\">{day}</div>\r\n\t\t\t<div className=\"expence-date__month\">{month}</div>\r\n\t\t\t<div className=\"expense-date__year\">{year}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default expenseDate;\r\n","import React from \"react\";\r\nimport \"./expenseItem.css\";\r\nimport ExpenseDate from \"./expenseDate\";\r\nimport Card from \"../Card/Card\";\r\nfunction ExpenseItem(props) {\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<Card className=\"expense-item\">\r\n\t\t\t\t<ExpenseDate date={props.date} />\r\n\t\t\t\t<div className=\"expense-item__description\">\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t<div className=\"expense-item__price\">â‚¹{props.amount}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n}\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./expenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n\tif (props.item.length === 0)\r\n\t\treturn <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n\tif (props.item.length > 0)\r\n\t\treturn (\r\n\t\t\t<ul className=\"expenses-list\">\r\n\t\t\t\t{props.item.map((Item) => (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ExpenseItem\r\n\t\t\t\t\t\t\tkey={Item.id}\r\n\t\t\t\t\t\t\ttitle={Item.title}\r\n\t\t\t\t\t\t\tamount={Item.amount}\r\n\t\t\t\t\t\t\tdate={Item.date}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t);\r\n};\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n\tlet barFillHeight = \"0%\";\r\n\r\n\tif (props.maxValue > 0) {\r\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"chart-bar\">\r\n\t\t\t<div className=\"chart-bar__inner\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"chart-bar__fill\"\r\n\t\t\t\t\tstyle={{ height: barFillHeight }}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chart-bar__label\">{props.label}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nconst Chart = (props) => {\r\n\tconst dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n\tconst totalMaximum = Math.max(...dataPointValues);\r\n\treturn (\r\n\t\t<div className=\"chart\">\r\n\t\t\t{props.dataPoints.map((dataPoint) => (\r\n\t\t\t\t<ChartBar\r\n\t\t\t\t\tkey={dataPoint.label}\r\n\t\t\t\t\tvalue={dataPoint.value}\r\n\t\t\t\t\tmaxValue={totalMaximum}\r\n\t\t\t\t\tlabel={dataPoint.label}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\tconst chartDataPoints = [\r\n\t\t{ label: \"Jan\", value: 0 },\r\n\t\t{ label: \"Feb\", value: 0 },\r\n\t\t{ label: \"Mar\", value: 0 },\r\n\t\t{ label: \"Apr\", value: 0 },\r\n\t\t{ label: \"May\", value: 0 },\r\n\t\t{ label: \"Jun\", value: 0 },\r\n\t\t{ label: \"Jul\", value: 0 },\r\n\t\t{ label: \"Aug\", value: 0 },\r\n\t\t{ label: \"Sep\", value: 0 },\r\n\t\t{ label: \"Oct\", value: 0 },\r\n\t\t{ label: \"Nov\", value: 0 },\r\n\t\t{ label: \"Dec\", value: 0 },\r\n\t];\r\n\r\n\tfor (const expense of props.expenses) {\r\n\t\tconst expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\r\n\t}\r\n\r\n\treturn <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React from \"react\";\r\nimport \"./Title.css\";\r\nconst Title = () => {\r\n\treturn <h1>Expense Tracker</h1>;\r\n};\r\nexport default Title;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpensesFilter from \"../NewExpense/ExpenseFilter\";\r\nimport \"./expenses.css\";\r\nimport Card from \"../Card/Card\";\r\nimport NewExpense from \"../NewExpense/NewExpense\";\r\nimport ExpenseList from \"../Expense/ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport Title from \"../Title/Title\";\r\nconst Dummy_expense = [];\r\nfunction Expenses() {\r\n\tconst [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n\tconst filterChangeHandler = (selectedYear) => {\r\n\t\tsetFilteredYear(selectedYear);\r\n\t};\r\n\tconst [expenses, setExpenses] = useState(Dummy_expense);\r\n\tconst addExpensehandler = (expense) => {\r\n\t\tsetExpenses((prevExpense) => {\r\n\t\t\treturn [expense, ...prevExpense];\r\n\t\t});\r\n\t};\r\n\tconst FilterExpenses = expenses.filter((exp) => {\r\n\t\treturn exp.date.getFullYear().toString() === filteredYear;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className=\"expenses\">\r\n\t\t\t\t<Title />\r\n\t\t\t\t<NewExpense onAddExpense={addExpensehandler} />\r\n\t\t\t\t<ExpensesFilter\r\n\t\t\t\t\tselected={filteredYear}\r\n\t\t\t\t\tonChangeFilter={filterChangeHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<ExpensesChart expenses={FilterExpenses} />\r\n\t\t\t\t<ExpenseList item={FilterExpenses} />\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Expenses;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Expenses from \"./components/ExpenseUI/expenses\";\nfunction App() {\n\treturn <Expenses />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}